//C++ program for binary search algorithm.
#include <bits/stdc++.h>
using namespace std;
int binarySearch(int arr[],int n,int x)
{
    int low = 0, high = n-1;
    while(low <= high)
    {
        int mid = (low + high)/2;
        if(arr[mid]==x)
          return mid;
        else if(arr[mid]>x)
          high = mid -1;
        else
          low  = mid +1;
    }
    return -1;
}
//Recursive binary search
int binarySearch(int arr[],int low , int high,int x)
{

    if(low > high ) return -1;
        int mid = (low + high)/2;
        if(arr[mid]==x)
          return mid;
        else if(arr[mid]>x)
          return binarySearch(arr, low , mid -1,x);
        else
          return binarySearch(arr, mid +1 , high,x);
    
}
int main(void)
{
    int arr[] = { 2, 3, 4, 10, 40 };
    int x = 10;
    int n = sizeof(arr) / sizeof(arr[0]);
    int result = binarySearch(arr, n, x);
    (result == -1) ? cout << "Element is not present in array"
                   : cout << "Element is present at index " << result;
    return 0;
}
